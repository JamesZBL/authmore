/*
 * Copyright 2019 ZHENG BAO LE
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    repositories {
        maven {
            url = 'https://maven.aliyun.com/repository/public'
        }
    }
}

plugins {
    id "com.gradle.build-scan" version "2.2.1"
    id 'com.bmuschko.docker-spring-boot-application' version '4.8.0'
}

allprojects {
    group = 'com.github.jameszbl'
    version = '1.0.8'
}

description = 'Authmore - 轻量级 OAuth2 开放平台开发套件'

ext {
    registryRepository = "registry-vpc.cn-beijing.aliyuncs.com/letec"
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'
    apply plugin: 'com.bmuschko.docker-spring-boot-application'

    repositories {
        mavenLocal()
        maven {
            url = 'https://maven.aliyun.com/repository/public'
        }
        maven {
            url = 'https://repo.spring.io/milestone'
        }
        maven {
            url = 'http://repo.maven.apache.org/maven2'
        }
    }

    docker {
        registryCredentials {
            url = "registry-vpc.cn-beijing.aliyuncs.com"
            username = "${System.env.PRIVATE_REG_USERNAME}"
            password = "${System.env.PRIVATE_REG_PASSWORD}"
        }

        springBootApplication {
            baseImage = 'openjdk:8-jdk-alpine'
        }
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier = 'sources'
    }

    task javadocJar(type: Jar) {
        from javadoc
        archiveClassifier = 'javadoc'
    }

    publishing {

        publications {

            mavenJava(MavenPublication) {

                from components.java
                artifact sourcesJar
                artifact javadocJar

                pom {
                    name = 'Authmore'
                    description = 'A lightweight development kit for building OAuth2 open platform.'
                    url = 'https://github.com/jameszbl/authmore'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'JamesZBL'
                            name = 'ZHENG BAO LE'
                            email = '1146556298@qq.com'
                            organization = 'letec.top'
                            organizationUrl = 'https://b.letec.top'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/jameszbl/authmore.git'
                        developerConnection = 'scm:git:ssh://github.com/jameszbl/authmore.git'
                        url = 'https://github.com/jameszbl/authmore'
                    }
                }
            }
        }

        repositories {
            maven {
                def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username = System.getenv("SONATYPE_USERNAME")
                    password = System.getenv("SONATYPE_PASSWORD")
                }
            }
        }
    }

    signing {
        sign publishing.publications.mavenJava
    }

    javadoc {
        if (JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption('html5', true)
        }
        afterEvaluate {
            configure(options) {
                encoding "UTF-8"
                charSet 'UTF-8'
                author true
                version true
                failOnError false
                links "http://docs.oracle.com/javase/8/docs/api"
            }
        }
    }
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}
